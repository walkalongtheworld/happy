<link href="p1.css" rel="stylesheet">
<link href="vm.css" rel="stylesheet">
<link href="gh.css" rel="stylesheet">
<p>必修课课程简介： </p>
<ul>
    <li>1.计算机导论
        本课程是学习计算机的入门课程，从介绍计算机基础知识入手，使学生掌握Windows操作系统的基本操作，掌握Windows界面下的文字处理系统的应用，电子表格的使用和演示文稿的制作，另外介绍网络基础知识和网络应用的基本操作。本课程无先修课程，第一学期开课。后续课程为专业基础课。 </li>
    <li>2.C语言程序设计 
        C语言是目前被广泛使用的一门高级程序设计语言，使用c语言不仅可以开发系统软件，也可以开发应用软件。《C语言程序设计》课程主要介绍了面向过程的程序设计的基本思想和方法，包括算法、程序的基本控制结构、数组、函数、指针、文件以及结构化程序设计的基本方法等。通过本课的学习学生可以掌握C语言编程的一般方法和步骤,并具有一定的编程实践能力和利用计算机解决一些实际问题的能力。本课程的后续课是《数据结构》、《Visual Basic程序设计》。 </li>
    <li>3.Visual Basic程序设计 
        本课程通过Visual Basic程序设计语言及其程序设计方法的讲述，一方面介绍了面向对象程序设计的基本知识、基本语法和编程方法；另一方面详细介绍了可视化界面的设计方法，控件的使用、图形操作和数据库的应用等知识，使学生学习后能运用所学的知识开发图形界面（Windows）下的应用软件。本课程是后序课程是《网络数据库》、《网络编程》等。 </li>
    <li>4.数据结构 
       《数据结构》是“信息管理与信息系统”本科专业的专业课。本课程主要培养学生分析数据、组织数据的能力，介绍数据的逻辑结构、存储结构及有关算法。使学生能够根据数据处理问题的需要，为待处理的数据选择合适的逻辑结构和存储结构，编写出效率较高、质量较好的程序。后续课程为《网络数据库》。</li>
    <li>5.信息系统安全工程学 
        本课程是信息安全工程专业本科生的专业课程。通过学习本课程，使学生了解系统工程的基本原理和方法，了解系统安全工程概念，理解系统安全工程能力成熟度模型，掌握系统安全工程能力的评估模型和方法，重点掌握信息系统安全工程的过程规划、实施、管理和控制。无先修课程， 后续课程为《信息系统分析与设计》、《信息系统开发》。 </li>
    <li>6.汇编语言与微机原理教程课程简介 
        本课程的主讲述微型计算机基础、8086/8088汇编语言程序设计、微机机器语言指令、常用指令、8086CPU、半导体存储器、输入输出及中断系统、总线、可编程接口芯片等，以8086/8088为基础，启发学生对80486/80586及Pentium工作原理的理解，为实际使用计算机打下理论基础。</li> 
    <li>7.计算机网络 
        本课程全面介绍计算机网络的发展和体系结构，物理层，数据链路层，局域网，广域网，网络互连，运输层，计算机网络的安全，ATM技术和当前计算机网络的若干热门话题等内容。既重视基本原理和基本概念的阐述，又反映出计算机网络的一些最新发展。本课程适合于本科生的学习和研究。此课程无后续课程。</li> 
    <li>8.计算机操作系统原理 
        本课程主要介绍操作系统的定义、发展和形成过程，操作系统的基本原理和功能，如进程管理、存储管理、设备管理和文件管理等内容，操作系统的用户界面和实现技术。通过对典型操作系统（UNIX操作系统）的示例介绍，使操作系统的原理和实际应用结合起来。</li> 
    <li>9.信息系统分析与设计 
        计算机信息系统开发是计算机应用的一个重要领域。作为信息系统开发的主要工作，信息系统分析与设计在实践中逐渐确立、丰富和完善了自己的理论、方法和技术，并成为现代信息社会重要的研究内容和应用领域。信息系统分析与设计涉及多方面的内容，它以众多的理论、方法和技术为基础，是一个综合性很强的研究和应用领域。由于信息系统分析与设计工作在当代社会中具有重要的地位，因而它是高等学校信息类专业及相关专业教学计划中的一门核心课程。该课的后续课是信息系统开发、人工智能等。 </li>
    <li>10.数据库原理 
        通过学习使学生掌握有关关系数据库的基本概念和基础理论和基本技术，掌握关系数据库系统的模型，关系代数，关系数据理论；通过学习数据库的设计方法设计简单的数据库应用系统；通过学习数据库的系统管理方法，掌握数据库的基本的系统管理内容。并通过上机掌握一种小型的关系数据库管理系统的使用方法；让学生通过此门课程的学习，掌握程序设计的基本方法，掌握数据库中数据的处理，掌握数据库管理系统的开发和应用技术。为将来的实际工作打下良好的基础。后续课程为《分布式数据库》、《软件工程》。</li> 
    <li>11.网络数据库 
       《网络数据库》是“信息管理与信息系统”本科专业的专业课。SQL Server 2000是Microsoft公司最新推出的大型数据库管理系统。通过本课程的学习，学生能够掌握T_SQL语言和应用SQL Server 2000进行数据库软件的开发，为进一步提高程序设计能力和项目开发能力打下良好的基础。后续课程为《网络编程》。 </li>
    <li>12.信息系统开发 
        本课程主要讲述信息系统开发的全过程，首先介绍与信息系统开发相关的基本原理、基本概念及开发步骤，然后结合几个开发实例着重介绍了总体规划、系统分析、系统设计、系统测试、运行维护等阶段的工作方法、工作原则和应该建立的文档资料。 </li>
    <li>13.电子商务 
        本课程适用于“信息管理与信息系统”本科专业，是一门专业必修课。通过本课程的学习，使学生正确理解电子商务概念，掌握电子商务的运作模式、电子商务涉及的诸多技术——通信网络技术、安全保密技术、EDI、Internet、intranet等，熟悉电子商务与其它领域的关系——电子商务与网络营销、电子商务与物流等。加强学生对于电子商务知识的理解和过程的掌握，使学生了解电子商务的基本原理，提高学生分析问题解决问题的实际能力。无后序课程。 </li>
    <li>14.网络编程 
        本课程主要讲解如何使用JSP开发Web动态网站：从JSP开发环境的搭建到编写一个简单的应用程序，从JSP编程基础到基本语法和内部对象，从服务器端应用程序Servlet到组件技术JavaBeans，从创建文件应用程序到Web数据库处理；并以企业商务网站为例讲解网站常用的模块。本课程无后序课。 </li>
<p>选修课课程简介: </p>
    <li>1.网页制作 
        本课程主要讲述网页制作三剑客：Flash 、Fireworks、 Dreamweaver。通过对Flash的学习，掌握制作创建体积小、下载速度快的适应网络传输的网页动画，通过对Fireworks的学习，掌握设计各种位图和矢量图，创建悬停按钮、分割图等，以及进行图像的设计与编辑的技巧。通过对Dreamweaver的学习，掌握网页设计和网站管理的综合应用。后续课程为网络编程 </li>
    <li>2.Power Builer程序设计 
       《Power Builder程序设计》是一个专业化的、面向对象的客户/服务器模式数据库应用系统前台开发工具，是当今最具实力、最富图像化的开发环境。通过本课程的学习，使计算机专业学生真正掌握一门专业性的数据库前端开发工具。本课程将介绍PB的基础知识和使用方法，使学生在掌握PB开发数据库应用的一般步骤和方法的基础上，掌握PB的语言基础Powerscrip和数据库语言SQL语言的一般知识，掌握PB开发环境和常用对象的使用方法。 </li>
    <li>3.平面设计 
        Photoshop是Adobe公司推出的功能强大的图像处理软件，本课程系统、全面地介绍了Photoshop 6.0 中文版处理图像和网页的相关技术，包括图像处理基础知识，图像范围的选择，图层的应用，图像描绘和图像调整技术，滤镜工具的应用，形状与文字特效制作等，用图像处理的精彩实例综合各方面技巧的应用。本课程无后续课程。 </li>
    <li>4.决策支持系统 
        本课程介绍管理信息系统、模型辅助决策、决策支持系统、专家系统、数据仓库、数据开采等。通过学习本课程，使学生了解决策支持系统的概念，掌握模型辅助决策、数据库系统专家系统等的工作原理，重点掌握数据仓库和数据开采等的工作原理和技术分析。培养学生分析问题、解决问题的能力，对一些问题给予理论上的支持。无后序课程。</li> 
    <li>5.Delphi程序设计 
        Delphi是Inprise公司推出的可视化、面向对象的应用程序开发工具，是开发Windows应用程序最为强大的工具之一。本课程主要讲述：Delphi的语法基础、可视化编程方法；Delphi顺序、分支、循环、过程与函数等程序控制结构；Delphi集成开发环境、基本控件使用，文件、图形图像与多媒体编程；Delphi数据库编程及网络编程等。此课程无后续课程。</li> 
    <li>6.软件工程 
        该课程主要介绍软件开发过程中所涉及到的主要问题，从软件的规划、开发到维护阶段所涉及到的问题，本课程的目的与任务是使学生通过本课程的学习，了解软件项目开发和维护的一般过程，掌握软件开发的传统方法和最新方法，为更深入地学习和今后从事软件工程实践打下良好的基础。后续课程为软件自动化。 </li>
    <li>7.人工智能 
        该课程主要介绍人工智能的基础知识，通过该课程的学习，学生可以了解人工智能中知识的表示，知识在计算机中的存储，通过存储的知识推理出相应的结论，包括确定性推理和不确定性推理，计算机中符号表示及其机器学习的基础知识，自然语言的理解及其专家系统的建立、设计和实现。此课程无后续课程。 </li>
    <li>8.数学建模 
        数学建模是应用数学方法解决实际问题的主要步骤，也是数学教学的主要内容，它是联系数学与实际问题的桥梁，是数学在各个领域广泛应用的媒介，是数学科学技术转化的主要途径。建立数学模型的过程，是把错综复杂的实际问题进行简化、抽象为合理的数学结构的过程。本课程主要讲述数学建模的一般方法，从各种现实生活中例子讲述基本模型（代数模型、随机模型、加工流水线设计模型、应急设施选址模型、飞行管理模型、锁具装箱模型、足球队排名模型）的建立和相关的数学支持理论（微积分、线性规划、动态规划、图论、排队论、层次分析等）的应用。 </li>
    <li>9.多媒体技术 
        多媒体技术把计算机技术的交互性和可视化的真实感结合起来，使其应用***到各个领域。《多媒体技术基础》是一门专业基础课程。通过学习此课程，理解多媒体技术的基本概念和主要功能，知道常用的多媒体工具软件的使用方法，了解如何进行多媒体软件开发和多媒体制造，从而为学生以后的学习和工作打下理论基础。本课程在学习之前最好具有Windows使用、计算机组成原理、程序设计语言的知识。 </li>
    <li>10.计算机系统结构 
        主要介绍计算机系统结构的基本概念、指令系统、存储系统、标量处理机、向量处理机、互连网络、SIMD计算机、多处理机等内容。计算机系统结构，是从程序设计者角度出发，所看到的计算机系统的属性，是计算机的外特性，概念性结构和功能特性，研究计算机系统的硬、软件的功能划分和接口关系，计算机组成是其具体实现。 </li>
    <li>11.多媒体软件制作 
        在众多的多媒体制作软件中，Authorware一直是开发多媒体产品人员的首选，这与Authorware的特性：功能强大、使用方便，可扩展性强等密不可分。作为一款十分优秀的多媒体制作软件，Authorware提供了一种基于设计图标与流程线的多媒体集成开发环境。广泛应用于多媒体辅助教学、企业产品展示，交互式自动售货，在线杂志和电子出版物出版等领域。</li> 
    <li>12.数据仓库原理 
        数据仓库以改进后的数据库技术作为存储数据和管理资源的基本手段，以统计分析技术作为分析数据和提取信息的有效手段，通过人工智能、神经网络、知识推理等数据挖掘方法发现数据背后隐藏的规律，从而实现“数据——信息——知识”的过程，为企业的管理阶层提供各种层次的决策支持。本课程从数据仓库、联机分析（OLAP）、数据挖掘等3个层次对数据仓库系统的关键技术进行深入细致的介绍和分析。主要讲述数据仓库的基本原理，OLAP的基本原理与建模方法，数据挖掘的基本理论，企业模型与数据仓库的模型设计，数据仓库规划和开发方法，数据挖掘的实施过程以及数据仓库的建立与维护。 </li>
    <li>13.JAVA编程语言 
        本课程主要介绍了JAVA语言的基础知识；运用JAVA语阐述面象对象的编程基础理论和思维方法；深入浅出讲解了JAVA语言的输入和输出，异常和多线程；以大量的实例讲述了JAVA应用程序，小程序和图形用户界面设计；对JAVA语言的网络编程也做了介绍。通过本课程的学习，使同学掌握面向对象程序设计的基本概念与方法，掌握以JAVA 语言为基础的面向对象编程技术,并初步掌握以java为核心的应用软件开发方案。 </li>
    <li>14.计算机英语 
        本课程分为计算机硬件与基本原理、计算机软件和计算机应用三部分。第一部分介绍了计算机的发展历史，计算机的输入、处理器单元、输出以及半导体存储器和辅助存储器。第二部分介绍了系统软件和应用软件的概念、操作系统、程序开发、计算机病毒等。第三部分介绍了数据通信，Internet和网络应用技术方面的内容。通过学习本课程，可了解计算机基础知识，掌握计算机使用技能。 </li>
    <li>15.计算机系统结构 
        主要介绍计算机系统结构的基本概念、指令系统、存储系统、标量处理机、向量处理机、互连网络、SIMD计算机、多处理机等内容。 计算机系统结构，是从程序设计者角度出发，所看到的计算机系统的属性，是计算机的外特性，概念性结构和功能特性，研究计算机系统的硬、软件的功能划分和接口关系，计算机组成是其具体实现。
        
